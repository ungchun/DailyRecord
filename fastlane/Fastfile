default_platform(:ios)

platform :ios do
  
  before_all do
    # 현재 github actions 같은 ci 환경이라면 setup_ci_ifNeeded lane 실행
    setup_ci_ifNeeded if is_ci
  end

  private_lane :setup_ci_ifNeeded do
    setup_ci
    set_keychain 
    match_provisioning_profiles
   # xcode_select("/Applications/Xcode_15.3.app")
  end

  private_lane :set_keychain do
    create_keychain(
      name: ENV["KEYCHAIN_NAME"],
      password: ENV["KEYCHAIN_PASSWORD"],
      timeout: 1800,
      default_keychain: true,
      unlock: true,
      lock_when_sleeps: false
    )
  end  
  
  private_lane :match_provisioning_profiles do
    keychain_name = ENV["KEYCHAIN_NAME"]
    keychain_password = ENV["KEYCHAIN_PASSWORD"]

    match(
      type: "development",
      readonly: is_ci,
      keychain_name: keychain_name,     
      keychain_password: keychain_password
    )

    match(
      type: "appstore", 
      readonly: is_ci,
      keychain_name: keychain_name,
      keychain_password: keychain_password
    )
  end

  # App Store Connect API를 사용하기 위한 인증 정보를 설정
  private_lane :setup_app_store_connect_api_key do 
    app_store_connect_api_key(
     "key_id": ENV['APP_STORE_CONNECT_API_KEY_ID'],
     "issuer_id": ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
     "key_content": ENV['APP_STORE_CONNECT_API_KEY_CONTENT']
    )
  end

  desc "build app and upload to testflight"
  lane :beta do
    setup_app_store_connect_api_key
    sync_code_signing
    increment_build_number(
        build_number: latest_testflight_build_number + 1
    )
    build_app(
      configuration: "Debug",
      export_method: "app-store",
      clean: true
    )

    #ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "120"

    upload_to_testflight
    slack(
      message: "🎉 Testflight 배포에 성공했습니다!",
      slack_url: ENV['SLACK_WEBHOOK_URL']
    )
  end

  desc "build app and release to App Store."
  lane :release do |options|
    setup_app_store_connect_api_key
    sync_code_signing

    increment_build_number(
      build_number: latest_testflight_build_number + 1
    )

    build_app(
      configuration: "Release",
      export_method: "app-store",
      clean: true
    )

    app_version = get_version_number(
      xcodeproj: ENV['XCODE_PROJECT'],
      target: ENV['TARGET_NAME']
    )

    #ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "120"
    upload_to_app_store(
      app_version: app_version,
      skip_screenshots: true,
      skip_metadata: false,
      submit_for_review: false,
      force: true,
      automatic_release: false,
      metadata_path: "./metadata",
      precheck_include_in_app_purchases: false
    )

    slack(
      message: "🎉 AppStore 배포에 성공했습니다!",
      slack_url: ENV['SLACK_WEBHOOK_URL']
    )
  end

  error do |lane, exception, options|
    slack(
      message: "🚨 에러 발생 : #{exception}",
      success: false,
      slack_url: ENV['SLACK_WEBHOOK_URL']
    )
  end
end
